/*
 * generated by Xtext
 */
package org.archware.sosadl.generator

import org.archware.sosadl.sosADL.SosADL
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.archware.sosadl.sosADL.generator.SosADLCoqGenerator

//import org.archware.iosts.ui.contentassist.AbstractIoSTSProposalProvider
/**
 * Generates IOSTS code from the given SosADL model files on save.
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class SosADL2CoqGenerator implements IGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess fsa) {

		for (e : resource.allContents.toIterable.filter(SosADL)) {
			var resourceFilename = e.eResource.URI.trimFileExtension.lastSegment
			System.out.print("Transforming '" + resourceFilename + "'")
			var s = e.compile
			var outname = resourceFilename + ".v"
			System.out.println(" into: '" + outname + "'")

			//fsa.generateFile(outname, s)
			System.out.println(s)
		}
	}

	def compile(SosADL s) '''
		Require Import SosADL.
		Require Import String.
		Require Import List.
		Require Import BinInt.
		
		Import ListNotations.
		
		Local Open Scope list_scope.
		Local Open Scope string_scope.
		Local Open Scope Z_scope.
		
		Definition ast :=
		«(new SosADLCoqGenerator).generatet_SosADL(s)».
		
		(*
		Local Variables:
		mode: coq
		coding: utf-8
		End:
		 *)
	'''
}
